{"version":3,"sources":["DndItemTypes.js","components/LeagueTable/Positions.js","zustand/store.js","components/Team/Team.js","components/Position/Position.js","api/leagueTableApi.js","components/LeagueTable/SampleData.js","components/LeagueTable/LeagueTable.js","components/App.js","registerServiceWorker.js","index.js"],"names":["ItemTypes","findTeamIndex","teamId","positions","findIndex","team","id","recalculateSwappedPositions","sourceTeamId","targetTeamId","currentPositions","clonedPositions","map","index","find","sourceInfo","targetInfo","pos","recalculatePositionsWithRenamedTeam","updatedText","teamIndex","name","initialState","undefined","loadingCompleted","useStore","create","devtools","set","setPositions","swapPositions","action","state","updateTeamname","Team","props","positionNumber","rank","dragReturn","useDrag","type","item","end","monitor","didDrop","dragItem","getItem","dropResult","getDropResult","classes","classNames","className","style","cursor","ref","onChange","evt","target","value","role","html","autoFocus","maxLength","disabled","editing","Position","dropReturn","useDrop","accept","drop","getSampleData","fetch","then","res","json","t","SAMPLE_LEAGUE_TABLE","LeagueTable","useQuery","onSuccess","data","onError","isLoading","error","message","DndProvider","backend","HTML5Backend","Col","md","Card","bg","Header","Title","Body","queryClient","QueryClient","App","Container","Row","client","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"wOAAaA,EACL,O,wDCDFC,EAAgB,SAACC,EAAQC,GAAT,OACpBA,EAAUC,WAAU,SAACC,GAAD,OAAUA,EAAKC,KAAOJ,MAK/BK,EAA8B,SACzCC,EACAC,EACAC,GAEA,IAAMC,EAAe,YAAOD,GAE5B,EAAiC,CAACF,EAAcC,GAAcG,KAAI,SAACN,GAAD,MAAS,CACzEO,MAAOZ,EAAcK,EAAIK,GACzBN,MAZcH,EAYCI,EAZOH,EAYHQ,EAXrBR,EAAUW,MAAK,SAACT,GAAD,OAAUA,EAAKC,KAAOJ,OADtB,IAACA,EAAQC,KAUxB,mBAAOY,EAAP,KAAmBC,EAAnB,KAKA,OAAON,EAAiBE,KAAI,SAACK,EAAKJ,GAChC,OAAIA,IAAUG,EAAWH,MAChB,eAAKE,EAAWV,MACdQ,IAAUE,EAAWF,MACvB,eAAKG,EAAWX,MAClB,eAAYY,OAIVC,EAAsC,SACjDb,EACAc,EACAT,GAEA,IAAMU,EAAYnB,EAAcI,EAAKC,GAAII,GAEzC,OAAOA,EAAiBE,KAAI,SAACK,EAAKJ,GAAN,mBAAC,eACxBI,GADuB,IAE1BI,KAAMD,IAAcP,EAAQM,EAAcF,EAAII,W,yBC7B5CC,EAAe,CACnBnB,eAAWoB,EACXC,kBAAkB,GAGPC,EAAWC,IACtBC,oBAAS,SAACC,GAAD,mBAAC,eACLN,GADI,IAEPO,aAAc,SAAC1B,GACbyB,GAAI,iBAAO,CAAEzB,iBAEf2B,cAAe,SAACC,GACdH,GAAI,SAACI,GAAD,MAAY,CACd7B,UAAWI,EACTwB,EAAOvB,aACPuB,EAAOtB,aACPuB,EAAM7B,gBAIZ8B,eAAgB,SAACF,GACfH,GAAI,SAACI,GAAD,MAAY,CACd7B,UAAWe,EACTa,EAAO1B,KACP0B,EAAOZ,YACPa,EAAM7B,sB,OC+CD+B,EAnDF,SAACC,GACZ,IArBiCC,EAqBzBC,EAAeF,EAAfE,KAAMhC,EAAS8B,EAAT9B,KACR4B,EAAiBR,GAAS,SAACO,GAAD,OAAWA,EAAMC,kBAC3CH,EAAgBL,GAAS,SAACO,GAAD,OAAWA,EAAMF,iBAC1CQ,EAAaC,YAAQ,CACzBC,KAAMxC,EACNyC,KAAM,CAAEpC,QACRqC,IAAK,SAACD,EAAME,GACV,GAAKA,EAAQC,UAAb,CAGA,IAAMC,EAAWF,EAAQG,UACnBC,EAAaJ,EAAQK,gBAC3BlB,EAAc,CACZtB,aAAcqC,EAASxC,KAAKC,GAC5BG,aAAcsC,EAAW1C,KAAKC,SAK9B2C,EAAUC,IACd,YACA,MACA,YA1CqB,KADUd,EA4CLC,GA1CnB,oCAELD,GAAkB,EACb,oCAELA,GAAkB,EACb,iCAELA,GAAkB,GACb,+BAEc,KAAnBA,EACK,+BAEA,6BAmCT,OACE,qBAAKe,UAAWF,EAASG,MAAO,CAAEC,OAAQ,WAAaC,IAAKhB,EAAW,GAAvE,SACE,cAAC,IAAD,CACEiB,SAPW,SAACC,GAChBvB,EAAe,CAAE5B,OAAMc,YAAaqC,EAAIC,OAAOC,SAO3CC,KAAM,SACNR,UAAU,cACVS,KAAMvD,EAAKgB,KACXwC,WAAW,EACXC,UAAW,IACXC,UAAW1D,EAAK2D,aC3CTC,EAnBE,SAAC9B,GAChB,IAAM9B,EAAO8B,EAAM9B,KACbgC,EAAOF,EAAME,KACb6B,EAAaC,YAAQ,CACzBC,OAAQpE,EACRqE,KAAM,iBAAO,CAAEhE,WAEjB,OACE,qBAAKiD,IAAKY,EAAW,GAArB,SACE,cAAC,EAAD,CAAM7D,KAAMA,EAAMgC,KAAMA,O,wCCfjBiC,EAAgB,kBAC3BC,MAAM,mDACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAAD,OAASA,EAAI7D,KAAI,SAAC+D,GAAD,mBAAC,eAAYA,GAAb,IAAgBX,SAAS,WCHvCY,EAAsB,CACjC,CACEvD,KAAM,8BACN2C,SAAS,EACT1D,GAAI,OAEN,CACEe,KAAM,oBACN2C,SAAS,EACT1D,GAAI,OAEN,CACEe,KAAM,uBACN2C,SAAS,EACT1D,GAAI,OAEN,CACEe,KAAM,gBACN2C,SAAS,EACT1D,GAAI,OAEN,CACEe,KAAM,mBACN2C,SAAS,EACT1D,GAAI,OAEN,CACEe,KAAM,gBACN2C,SAAS,EACT1D,GAAI,OAEN,CACEe,KAAM,oBACN2C,SAAS,EACT1D,GAAI,OAEN,CACEe,KAAM,gBACN2C,SAAS,EACT1D,GAAI,OAEN,CACEe,KAAM,gBACN2C,SAAS,EACT1D,GAAI,OAEN,CACEe,KAAM,eACN2C,SAAS,EACT1D,GAAI,OAEN,CACEe,KAAM,eACN2C,SAAS,EACT1D,GAAI,OAEN,CACEe,KAAM,sBACN2C,SAAS,EACT1D,GAAI,OAEN,CACEe,KAAM,gBACN2C,SAAS,EACT1D,GAAI,OAEN,CACEe,KAAM,aACN2C,SAAS,EACT1D,GAAI,OAEN,CACEe,KAAM,cACN2C,SAAS,EACT1D,GAAI,OAEN,CACEe,KAAM,cACN2C,SAAS,EACT1D,GAAI,OAEN,CACEe,KAAM,WACN2C,SAAS,EACT1D,GAAI,OAEN,CACEe,KAAM,gBACN2C,SAAS,EACT1D,GAAI,QC7COuE,EAlCK,WAClB,IAAM1E,EAAYsB,GAAS,SAACO,GAAD,OAAWA,EAAM7B,aACtC0B,EAAeJ,GAAS,SAACO,GAAD,OAAWA,EAAMH,gBAC/C,EAA6BiD,mBAAS,aAAcR,EAAe,CACjES,UAAW,SAACC,GAAD,OAAUnD,EAAamD,IAClCC,QAAS,kBAAMpD,EAAa+C,MAFtBM,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAKnB,OAAID,EACK,aAGLC,EACK,0BAA4BA,EAAMC,QAIzC,cAACC,EAAA,EAAD,CAAaC,QAASC,IAAtB,SACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAACC,EAAA,EAAD,CAAMC,GAAG,OAAT,UACE,cAACD,EAAA,EAAKE,OAAN,CAAajC,KAAM,UAAnB,SACE,cAAC+B,EAAA,EAAKG,MAAN,8CAEF,cAACH,EAAA,EAAKI,KAAN,UACG3F,EAAUS,KAAI,SAACP,EAAMQ,GAAP,OACb,cAAC,EAAD,CAAUR,KAAMA,EAAMgC,KAAMxB,EAAQ,GAAQA,gBC5BpDkF,EAAc,IAAIC,cAgBTC,EAdH,WACV,OACE,qBAAK9C,UAAU,QAAf,SACE,cAAC+C,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC,sBAAD,CAAqBC,OAAQL,EAA7B,SACE,cAAC,EAAD,aCLNM,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTpC,MAAK,SAACwC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlF,QACf6E,UAAUC,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAACrC,GACNmC,QAAQnC,MAAM,4CAA6CA,M,MCxEjEsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SDalC,WACb,GAA6C,kBAAmBf,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,iBAAwBvB,OAAOC,UAC3CuB,SAAWxB,OAAOC,SAASuB,OAIvC,OAGFxB,OAAOyB,iBAAiB,QAAQ,WAC9B,IAAMpB,EAAK,UAAMkB,iBAAN,sBAEPzB,IAiDV,SAAiCO,GAE/BrC,MAAMqC,GACHpC,MAAK,SAACyD,GAGiB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CxB,UAAUC,cAAcwB,MAAM9D,MAAK,SAACwC,GAClCA,EAAauB,aAAa/D,MAAK,WAC7B+B,OAAOC,SAASgC,eAKpB7B,EAAgBC,MAGnBY,OAAM,WACLF,QAAQC,IACN,oEArEAkB,CAAwB7B,GAIxBC,UAAUC,cAAcwB,MAAM9D,MAAK,WACjC8C,QAAQC,IACN,gHAMJZ,EAAgBC,OCxCxB8B,K","file":"static/js/main.02557b36.chunk.js","sourcesContent":["export const ItemTypes = {\n  TEAM: 'team',\n};\n","const findTeamIndex = (teamId, positions) =>\n  positions.findIndex((team) => team.id === teamId);\n\nconst findTeam = (teamId, positions) =>\n  positions.find((team) => team.id === teamId);\n\nexport const recalculateSwappedPositions = (\n  sourceTeamId,\n  targetTeamId,\n  currentPositions\n) => {\n  const clonedPositions = [...currentPositions];\n\n  const [sourceInfo, targetInfo] = [sourceTeamId, targetTeamId].map((id) => ({\n    index: findTeamIndex(id, clonedPositions),\n    team: findTeam(id, clonedPositions),\n  }));\n\n  return currentPositions.map((pos, index) => {\n    if (index === targetInfo.index) {\n      return { ...sourceInfo.team };\n    } else if (index === sourceInfo.index) {\n      return { ...targetInfo.team };\n    } else return { ...pos };\n  });\n};\n\nexport const recalculatePositionsWithRenamedTeam = (\n  team,\n  updatedText,\n  currentPositions\n) => {\n  const teamIndex = findTeamIndex(team.id, currentPositions);\n\n  return currentPositions.map((pos, index) => ({\n    ...pos,\n    name: teamIndex === index ? updatedText : pos.name,\n  }));\n};\n","import {\n  recalculatePositionsWithRenamedTeam,\n  recalculateSwappedPositions,\n} from '../components/LeagueTable/Positions';\nimport create from 'zustand';\nimport { devtools } from 'zustand/middleware';\n\nconst initialState = {\n  positions: undefined,\n  loadingCompleted: false,\n};\n\nexport const useStore = create(\n  devtools((set) => ({\n    ...initialState,\n    setPositions: (positions) => {\n      set(() => ({ positions }));\n    },\n    swapPositions: (action) => {\n      set((state) => ({\n        positions: recalculateSwappedPositions(\n          action.sourceTeamId,\n          action.targetTeamId,\n          state.positions\n        ),\n      }));\n    },\n    updateTeamname: (action) => {\n      set((state) => ({\n        positions: recalculatePositionsWithRenamedTeam(\n          action.team,\n          action.updatedText,\n          state.positions\n        ),\n      }));\n    },\n  }))\n);\n","import { useDrag } from 'react-dnd';\nimport React from 'react';\nimport { ItemTypes } from '../../DndItemTypes';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport ContentEditable from 'react-contenteditable';\nimport { useStore } from '../../zustand/store';\n\nconst calculatePositionCssClass = (positionNumber) => {\n  if (positionNumber === 1) {\n    return 'tabellenfuehrerClass tabelleClass';\n  }\n  if (positionNumber <= 3) {\n    return 'championsLeagueClass tabelleClass';\n  }\n  if (positionNumber <= 6) {\n    return 'europaLeagueClass tabelleClass';\n  }\n  if (positionNumber <= 15) {\n    return 'mittelfeldClass tabelleClass';\n  }\n  if (positionNumber === 16) {\n    return 'relegationClass tabelleClass';\n  } else {\n    return 'abstiegClass tabelleClass';\n  }\n};\n\nconst Team = (props) => {\n  const { rank, team } = props;\n  const updateTeamname = useStore((state) => state.updateTeamname);\n  const swapPositions = useStore((state) => state.swapPositions);\n  const dragReturn = useDrag({\n    type: ItemTypes.TEAM,\n    item: { team },\n    end: (item, monitor) => {\n      if (!monitor.didDrop()) {\n        return;\n      }\n      const dragItem = monitor.getItem();\n      const dropResult = monitor.getDropResult();\n      swapPositions({\n        sourceTeamId: dragItem.team.id,\n        targetTeamId: dropResult.team.id,\n      });\n    },\n  });\n\n  const classes = classNames(\n    'col-md-12',\n    'btn',\n    'text-bold',\n    calculatePositionCssClass(rank)\n  );\n\n  const onChange = (evt) => {\n    updateTeamname({ team, updatedText: evt.target.value });\n  };\n\n  return (\n    <div className={classes} style={{ cursor: 'pointer' }} ref={dragReturn[1]}>\n      <ContentEditable\n        onChange={onChange}\n        role={'button'}\n        className=\"textPointer\"\n        html={team.name}\n        autoFocus={true}\n        maxLength={200}\n        disabled={!team.editing}\n      />\n    </div>\n  );\n};\n\nTeam.propTypes = {\n  rank: PropTypes.number.isRequired,\n  team: PropTypes.object.isRequired,\n};\n\nexport default Team;\n","import React from 'react';\nimport { useDrop } from 'react-dnd';\nimport Team from '../Team/Team';\nimport PropTypes from 'prop-types';\nimport { ItemTypes } from '../../DndItemTypes';\n\nconst Position = (props) => {\n  const team = props.team;\n  const rank = props.rank;\n  const dropReturn = useDrop({\n    accept: ItemTypes.TEAM,\n    drop: () => ({ team }),\n  });\n  return (\n    <div ref={dropReturn[1]}>\n      <Team team={team} rank={rank} />\n    </div>\n  );\n};\n\nPosition.propTypes = {\n  rank: PropTypes.number.isRequired,\n  team: PropTypes.object.isRequired,\n};\n\nexport default Position;\n","export const getSampleData = () =>\n  fetch('https://holgergp.builtwithdark.com/league-table')\n    .then((res) => res.json())\n    .then((res) => res.map((t) => ({ ...t, editing: true })));\n","export const SAMPLE_LEAGUE_TABLE = [\n  {\n    name: 'Borussia Mönchengladbach',\n    editing: true,\n    id: 'BMG',\n  },\n  {\n    name: 'Borussia Dortmund',\n    editing: true,\n    id: 'BVB',\n  },\n  {\n    name: 'FC Bayern München',\n    editing: true,\n    id: 'FCB',\n  },\n  {\n    name: 'VFL Wolfsburg',\n    editing: true,\n    id: 'VFL',\n  },\n  {\n    name: 'Bayer Leverkusen',\n    editing: true,\n    id: 'B04',\n  },\n  {\n    name: 'FC Schalke 04',\n    editing: true,\n    id: 'S04',\n  },\n  {\n    name: 'Hertha BSC Berlin',\n    editing: true,\n    id: 'BSC',\n  },\n  {\n    name: '1. FC Köln',\n    editing: true,\n    id: '1FC',\n  },\n  {\n    name: 'FC Ingolstadt',\n    editing: true,\n    id: 'FCI',\n  },\n  {\n    name: 'Darmstadt 98',\n    editing: true,\n    id: 'D98',\n  },\n  {\n    name: 'Hamburger SV',\n    editing: true,\n    id: 'HSV',\n  },\n  {\n    name: 'Eintracht Frankfurt',\n    editing: true,\n    id: 'SGE',\n  },\n  {\n    name: 'Werder Bremen',\n    editing: true,\n    id: 'SVW',\n  },\n  {\n    name: 'Hoffenheim',\n    editing: true,\n    id: 'SAP',\n  },\n  {\n    name: 'FC Augsburg',\n    editing: true,\n    id: 'FCA',\n  },\n  {\n    name: 'Hannover 96',\n    editing: true,\n    id: 'H96',\n  },\n  {\n    name: 'Mainz 05',\n    editing: true,\n    id: 'M05',\n  },\n  {\n    name: 'VFB Stuttgart',\n    editing: true,\n    id: 'VFB',\n  },\n];\n","import React from 'react';\nimport Position from '../Position/Position';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { Card, Col } from 'react-bootstrap';\nimport { useStore } from '../../zustand/store';\nimport { useQuery } from 'react-query';\nimport { getSampleData } from '../../api/leagueTableApi';\nimport { SAMPLE_LEAGUE_TABLE } from './SampleData';\n\nconst LeagueTable = () => {\n  const positions = useStore((state) => state.positions);\n  const setPositions = useStore((state) => state.setPositions);\n  const { isLoading, error } = useQuery('sampleData', getSampleData, {\n    onSuccess: (data) => setPositions(data),\n    onError: () => setPositions(SAMPLE_LEAGUE_TABLE),\n  });\n\n  if (isLoading) {\n    return 'Loading...';\n  }\n\n  if (error) {\n    return 'An error has occurred: ' + error.message;\n  }\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Col md={6}>\n        <Card bg=\"dark\">\n          <Card.Header role={'heading'}>\n            <Card.Title>Ligatabelle zum Selberstecken</Card.Title>\n          </Card.Header>\n          <Card.Body>\n            {positions.map((team, index) => (\n              <Position team={team} rank={index + 1} key={index} />\n            ))}\n          </Card.Body>\n        </Card>\n      </Col>\n    </DndProvider>\n  );\n};\n\nexport default LeagueTable;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { Container, Row } from 'react-bootstrap';\nimport LeagueTable from './LeagueTable/LeagueTable';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst queryClient = new QueryClient();\n\nconst App = () => {\n  return (\n    <div className=\"index\">\n      <Container>\n        <Row>\n          <QueryClientProvider client={queryClient}>\n            <LeagueTable />\n          </QueryClientProvider>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}